{"version":3,"sources":["components/Register.js","components/LogIn.js","components/Header.js","components/Add-new.js","components/product.js","components/Home.js","components/User.js","App.js","serviceWorker.js","store/Store.js","index.js"],"names":["Register","inject","observer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getInfo","event","user","state","newUser","target","name","value","setState","addNewUser","Name","length","Newmessage","message","text","show","Email","Password","Phone","props","store","addUser","then","data","redirectTo","seller","JSON","parse","localStorage","getItem","_this2","react_default","a","createElement","className","Link","to","onChange","placeholder","onClick","style","color","Redirect","pathname","Component","LogIn","User","logInUser","userLogIn","getUsers","Header","logout","userLogOut","userInfo","id","href","AddNew","getProductInfo","newProduct","product","NewProduct","addNewProduct","userId","price","customers","image","description","email","messageText","messege","setTimeout","console","log","type","step","Prodect","addToCart","productId","toJS","userAddProduct","getAllProducts","deleteItem","border","i","class","backgroundImage","concat","validCustomers","Home","products","undefined","map","index","minValid","components_product","getProducts","key","changeRedirect","components_Header","logoutF","Route","exact","path","render","components_Home","Add_new","App","initUser","BrowserRouter","components_Register","components_LogIn","components_User","Boolean","window","location","hostname","match","action","bound","axios","get","answer","phone","post","exist","currentUser","setItem","params","password","put","clear","productInfo","observable","computed","info","ReactDOM","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de97aacf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      newUser: { Name: \"\", Email: \"\", Password: \"\", Phone: \"\", seller: false },\r\n      message: { text: \"\", show: false },\r\n      redirectTo: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let logIn = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (logIn) {\r\n      this.setState({\r\n        redirectTo: \"/home\"\r\n      });\r\n    }\r\n  }\r\n  getInfo = event => {\r\n    let user = this.state.newUser;\r\n    user[event.target.name] = event.target.value;\r\n    this.setState({\r\n      newUser: user\r\n    });\r\n  };\r\n  addNewUser = () => {\r\n    let user = this.state.newUser;\r\n    if (user.Name.length < 3) {\r\n      let Newmessage = this.state.message;\r\n      Newmessage.text = \"name min Letters 3\";\r\n      Newmessage.show = true;\r\n      this.setState({\r\n        message: Newmessage\r\n      });\r\n    } else if (user.Email.length < 11) {\r\n      let Newmessage = this.state.message;\r\n      Newmessage.text = \"email min Letters 11\";\r\n      Newmessage.show = true;\r\n      this.setState({\r\n        message: Newmessage\r\n      });\r\n    } else if (user.Password.length < 8) {\r\n      let Newmessage = this.state.message;\r\n      Newmessage.text = \"password min Number 8\";\r\n      Newmessage.show = true;\r\n      this.setState({\r\n        message: Newmessage\r\n      });\r\n    } else if (user.Phone.length < 8) {\r\n      let Newmessage = this.state.message;\r\n      Newmessage.text = \"phone min Number 8\";\r\n      Newmessage.show = true;\r\n      this.setState({\r\n        message: Newmessage\r\n      });\r\n    } else {\r\n      let answer = this.props.store.addUser(this.state.newUser).then(data => {\r\n        if (data) {\r\n          this.setState({\r\n            redirectTo: \"/home\"\r\n          });\r\n        }\r\n        let Newmessage = this.state.message;\r\n        Newmessage.text = \"\";\r\n        Newmessage.show = false;\r\n        this.setState({\r\n          message: Newmessage\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirectTo === null) {\r\n      return (\r\n        <div className=\"register\">\r\n          <div className=\"register1\">\r\n            <div className=\"register-header\">\r\n              <Link to=\"/LogIn\">\r\n                <span className=\"sign-in\">Sign in</span>\r\n              </Link>\r\n            </div>\r\n            <h3>\r\n              using this platform to sell/buy with the assist of purchase\r\n              groups, you can sign in as customer or seller and immediately join\r\n              the big market\r\n            </h3>\r\n\r\n            <input\r\n              onChange={event => {\r\n                this.getInfo(event);\r\n              }}\r\n              name=\"Name\"\r\n              placeholder=\"Name\"\r\n            />\r\n            <input\r\n              onChange={event => {\r\n                this.getInfo(event);\r\n              }}\r\n              name=\"Email\"\r\n              placeholder=\"Email\"\r\n            />\r\n            <input\r\n              onChange={event => {\r\n                this.getInfo(event);\r\n              }}\r\n              name=\"Password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <input\r\n              onChange={event => {\r\n                this.getInfo(event);\r\n              }}\r\n              name=\"Phone\"\r\n              placeholder=\"Phone\"\r\n            />\r\n            <button onClick={this.addNewUser}>create</button>\r\n            <h4 style={{ color: \"red\" }}>\r\n              {this.state.message.show ? this.state.message.text : null}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass LogIn extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      User: { Name: \"\", Password: \"\" },\r\n      message: { text: \"\", show: false },\r\n      redirectTo: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let logIn = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (logIn) {\r\n      this.setState({\r\n        redirectTo: \"/home\"\r\n      });\r\n    }\r\n  }\r\n  getInfo = event => {\r\n    let user = this.state.User;\r\n    user[event.target.name] = event.target.value;\r\n    this.setState({\r\n      User: user\r\n    });\r\n  };\r\n  logInUser = () => {\r\n    let answe = this.props.store.userLogIn(this.state.User).then(data => {\r\n      if (data === true) {\r\n        this.props.getUsers();\r\n        this.setState({\r\n          redirectTo: \"/home\"\r\n        });\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    if (this.state.redirectTo === null) {\r\n      return (\r\n        <div className=\"Login\">\r\n          <div className=\"Login1\">\r\n            <div className=\"Login-header\">\r\n              <Link to=\"/\">\r\n                <span className=\"register-link\">register</span>\r\n              </Link>\r\n            </div>\r\n            <input\r\n              onChange={event => {\r\n                this.getInfo(event);\r\n              }}\r\n              name=\"Name\"\r\n              placeholder=\"name\"\r\n            />\r\n            <input\r\n              onChange={event => {\r\n                this.getInfo(event);\r\n              }}\r\n              name=\"Password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <button onClick={this.logInUser}>log in</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import \"./app.css\";\r\nimport { BrowserRouter as Router, Redirect, Link } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\n@inject(\"store\")\r\n@observer\r\nclass Header extends Component {\r\n  logout = () => {\r\n    this.props.store.userLogOut(this.props.userInfo.id);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"nav-bar\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"/home\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/home/products\">products</a>\r\n          </li>\r\n\r\n          <li className=\"name\">\r\n            <a onClick={this.logout} href=\"\">\r\n              logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import \"./app.css\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\nimport User from \"./Header\";\r\n@inject(\"store\")\r\n@observer\r\nclass AddNew extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      product: {\r\n        name: \"\",\r\n        price: \"\",\r\n        customers: \"\",\r\n        image: \"\"\r\n      },\r\n      messege: false,\r\n      messageText: \"\"\r\n    };\r\n  }\r\n  getProductInfo = event => {\r\n    let newProduct = this.state.product;\r\n    newProduct[event.target.name] = event.target.value;\r\n    this.setState({\r\n      product: newProduct\r\n    });\r\n  };\r\n  NewProduct = () => {\r\n    this.props.store\r\n      .addNewProduct(this.state.product, this.props.userId)\r\n      .then(data => {\r\n        if (data === true) {\r\n          let obj = {\r\n            name: \"\",\r\n            price: \"\",\r\n            customers: \"\",\r\n            image: \"\",\r\n            description: \"\",\r\n            email: \"\"\r\n          };\r\n          this.setState({\r\n            product: obj,\r\n            messageText: \"item added succsusfuly\",\r\n            messege: true\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              messege: false,\r\n              messageText: \"\"\r\n            });\r\n          }, 2000);\r\n        } else {\r\n          this.setState({\r\n            messageText: \"somthing went wrong...\",\r\n            messege: true\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              messege: false,\r\n              messageText: \"\"\r\n            });\r\n          }, 2000);\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.product);\r\n    return (\r\n      <div className=\"AddNew\">\r\n        <div className=\"start\">\r\n          <h1>welcome to the trading platform</h1>\r\n          <h2>start by adding a new product</h2>\r\n        </div>\r\n        {this.state.messege ? (\r\n          <div className=\"success-message1\">\r\n            {this.state.messageText}\r\n            <div className=\"message-icon1\" />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"sales-logo\" />\r\n        <input\r\n          value={this.state.product.email}\r\n          name=\"email\"\r\n          onChange={event => {\r\n            this.getProductInfo(event);\r\n          }}\r\n          placeholder=\"seller-email\"\r\n        />\r\n        <input\r\n          value={this.state.product.name}\r\n          name=\"name\"\r\n          onChange={event => {\r\n            this.getProductInfo(event);\r\n          }}\r\n          placeholder=\"product name\"\r\n        />\r\n\r\n        <input\r\n          value={this.state.product.price}\r\n          name=\"price\"\r\n          onChange={event => {\r\n            this.getProductInfo(event);\r\n          }}\r\n          placeholder=\"price\"\r\n        />\r\n        <input\r\n          value={this.state.product.customers}\r\n          name=\"customers\"\r\n          onChange={event => {\r\n            this.getProductInfo(event);\r\n          }}\r\n          type=\"number\"\r\n          placeholder=\"minimum customers\"\r\n          step=\"1\"\r\n        />\r\n        <input\r\n          value={this.state.product.description}\r\n          name=\"description\"\r\n          onChange={event => {\r\n            this.getProductInfo(event);\r\n          }}\r\n          placeholder=\"description\"\r\n        />\r\n        <input\r\n          value={this.state.product.image}\r\n          name=\"image\"\r\n          onChange={event => {\r\n            this.getProductInfo(event);\r\n          }}\r\n          placeholder=\"image url\"\r\n        />\r\n        <button onClick={this.NewProduct} className=\"addProduct\">\r\n          Create\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNew;\r\n","import React, { Component } from \"react\";\r\n// import \"./app.css\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Prodect extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messege: false,\r\n      messageText: \"\"\r\n    };\r\n  }\r\n  addToCart = () => {\r\n    let productId = toJS(this.props.data.id);\r\n    let userId = this.props.store.userInfo.id;\r\n    this.props.store.userAddProduct(userId, productId).then(data => {\r\n      if (data === true) {\r\n        this.props.store.getAllProducts();\r\n      }\r\n    });\r\n    this.setState({\r\n      messageText: \"You have joined the group successfully!\",\r\n      messege: true\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        messege: false,\r\n        messageText: \"\"\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  deleteItem = () => {\r\n    let productId = toJS(this.props.data.id);\r\n    let userId = this.props.store.userInfo.id;\r\n    this.props.store.deleteItem(productId, userId).then(data => {\r\n      if (data.data === true) {\r\n        this.props.store.getAllProducts();\r\n      }\r\n    });\r\n    this.setState({\r\n      messageText: \"item remove succsusfuly\",\r\n      messege: true\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        messege: false,\r\n        messageText: \"\"\r\n      });\r\n    }, 2000);\r\n  };\r\n  render() {\r\n    let data = this.props.data;\r\n    let border = \"\";\r\n    for (let i in data.customers) {\r\n      let user = data.customers[i];\r\n      if (user.id === this.props.userId) {\r\n        border = \"10px green solid\";\r\n      }\r\n    }\r\n    return (\r\n      <div style={{ border: border }} className=\"prodect\">\r\n        {this.state.messege ? (\r\n          <div className=\"success-message\">\r\n            {this.state.messageText}\r\n            <div class=\"message-icon\" />\r\n          </div>\r\n        ) : null}\r\n        <div\r\n          style={{ backgroundImage: `url(${data.image})` }}\r\n          className=\"product-image\"\r\n        />\r\n        <h2>{data.name}</h2>\r\n        <h2>{data.price + \"$\"}</h2>\r\n        <p>{data.description}</p>\r\n        <h2 class=\"validCustomer\">\r\n          {this.props.validCustomers + \" more customers!\"}\r\n        </h2>\r\n        <button onClick={this.deleteItem} className=\"delete-product\">\r\n          delete\r\n        </button>\r\n        <button onClick={this.addToCart} className=\"add-product\">\r\n          add\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prodect;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import \"./app.css\";\r\nimport { BrowserRouter as Router, Redirect, Link } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\nimport Product from \"./product\";\r\n@inject(\"store\")\r\n@observer\r\nclass Home extends Component {\r\n  render() {\r\n    let products = this.props.store.products;\r\n    let userId = this.props.store.userInfo.id;\r\n    if (products !== undefined) {\r\n      if (toJS(products).length == 0) {\r\n        return (\r\n          <div className=\"empty-repo\">\r\n            <h1>empty repository</h1>\r\n            <div className=\"empty-repo-logo\" />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"seller-repo\">\r\n            {products.map((product, index) => {\r\n              let validCustomers = product.minValid - product.customers.length;\r\n              return (\r\n                <Product\r\n                  validCustomers={validCustomers}\r\n                  userId={userId}\r\n                  getProducts={this.props.getProducts}\r\n                  key={index}\r\n                  data={product}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return <h1 className=\"loding\">loading repository...</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddNew from \"./Add-new\";\r\nimport Header from \"./Header\";\r\nimport Home from \"./Home\";\r\n// import \"./app.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\n@inject(\"store\")\r\n@observer\r\nclass User extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      redirectTo: null\r\n    };\r\n  }\r\n  changeRedirect = () => {\r\n    this.setState({\r\n      redirectTo: \"/logIn\"\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    let logIn = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (!logIn) {\r\n      this.setState({\r\n        redirectTo: \"/logIn\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(toJS(this.props.products));\r\n    if (this.state.redirectTo === null) {\r\n      return (\r\n        <div className=\"seller\">\r\n          <Header userInfo={this.props.userInfo} logoutF={this.props.logoutF} />\r\n          <Route\r\n            exact\r\n            path=\"/home/products\"\r\n            render={() => {\r\n              return (\r\n                <Home\r\n                  userId={this.props.userInfo.id}\r\n                  getProducts={this.props.getProducts}\r\n                  products={this.props.products}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/home\"\r\n            exact\r\n            render={() => {\r\n              return (\r\n                <AddNew\r\n                  redirectTo={this.changeRedirect}\r\n                  userId={this.props.userInfo.id}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport LogIn from \"./components/LogIn\";\nimport User from \"./components/User\";\nimport { observer, inject } from \"mobx-react\";\nimport { throws } from \"assert\";\n\n@inject(\"store\")\n@observer\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      redirectTo: null\n    };\n  }\n  redirectTo = data => {\n    console.log(data);\n    this.setState({\n      redirectTo: `\"${data}\"`\n    });\n  };\n\n  async componentDidMount() {\n    let logIn = JSON.parse(localStorage.getItem(\"user\"));\n    if (logIn) {\n      await this.props.store.initUser();\n      await this.props.store.getAllProducts();\n      this.setState({\n        redirectTo: \"/home\"\n      });\n    }\n  }\n  getProducts = () => {\n    this.props.store.getAllProducts();\n    this.setState({\n      redirectTo: \"/logIn\"\n    });\n  };\n  getUsers = () => {\n    this.props.store.getAllProducts();\n    this.props.store.initUser();\n  };\n  render() {\n    // console.log(toJS(this.props.store.userInfo));\n    return (\n      <Router>\n        <div>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <Register />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/LogIn\"\n            render={() => {\n              return <LogIn getUsers={this.getUsers} />;\n            }}\n          />\n          <Route\n            path=\"/home\"\n            render={() => {\n              return (\n                <User\n                  getProducts={this.getProducts}\n                  redirectTo={this.redirectTo}\n                  userInfo={this.props.store.userInfo}\n                  products={this.props.store.products}\n                />\n              );\n            }}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action, computed } from \"mobx\";\r\nimport axios from \"axios\";\r\nimport { toJS } from \"mobx\";\r\nclass Store {\r\n  @observable\r\n  userInfo = {};\r\n  @observable\r\n  products = [];\r\n  @computed\r\n  get userData() {\r\n    return this.userInfo;\r\n  }\r\n  @action.bound\r\n  initUser() {\r\n    axios.get(\"/initUser\").then(answer => {\r\n      let data = {\r\n        name: answer.data.name,\r\n        email: answer.data.email,\r\n        phone: answer.data.phone,\r\n        seller: answer.data.seller,\r\n        id: answer.data.id,\r\n        products: answer.data.products\r\n      };\r\n      this.userInfo = data;\r\n    });\r\n  }\r\n\r\n  @action.bound\r\n  currentUser = info => {\r\n    this.userInfo = info;\r\n  };\r\n\r\n  @action\r\n  async addUser(userInfo) {\r\n    let answer = await axios.post(\"/newUser\", userInfo);\r\n    if (answer.data.exist === true) {\r\n      this.currentUser(answer.data.data);\r\n      localStorage.setItem(\"user\", \"true\");\r\n    }\r\n    return answer.data.exist;\r\n  }\r\n\r\n  // works good\r\n  @action.bound\r\n  async userLogIn(userInfo) {\r\n    let answer = await axios.get(\"/LogIn\", {\r\n      params: { name: userInfo.Name, password: userInfo.Password }\r\n    });\r\n    if (answer.data.exist === true) {\r\n      this.currentUser(answer.data.data);\r\n      localStorage.setItem(\"user\", \"true\");\r\n    }\r\n    return answer.data.exist;\r\n  }\r\n  @action\r\n  async userLogOut(userId) {\r\n    let answer = await axios.put(\"/logOut\", { userId });\r\n    if (answer.data === true) {\r\n      localStorage.clear();\r\n    }\r\n    this.currentUser({});\r\n    return answer.data;\r\n  }\r\n  @action\r\n  async addNewProduct(productInfo, userId) {\r\n    if (userId === undefined) {\r\n      return false;\r\n    } else {\r\n      let answer = await axios.post(\"/addNewProduct\", { productInfo, userId });\r\n      if (answer.data === true) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  @action.bound\r\n  async userAddProduct(userId, productId) {\r\n    let answer = await axios.post(\"/userAddProduct\", { userId, productId });\r\n    return answer.data;\r\n  }\r\n  @action.bound\r\n  async getAllProducts() {\r\n    let answer = await axios.get(\"/products\");\r\n    this.products = answer.data;\r\n  }\r\n  @action.bound\r\n  async deleteItem(productId, userId) {\r\n    let answer = await axios.put(\"/deleteProduct\", { productId, userId });\r\n    return answer.data;\r\n  }\r\n}\r\n\r\nconst store = new Store();\r\nwindow.store = store;\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/Store\";\nimport { Provider } from \"mobx-react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}