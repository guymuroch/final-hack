{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor;\n\nimport { observable, action, computed } from \"mobx\";\nimport axios from \"axios\";\nvar Store = (_class =\n/*#__PURE__*/\nfunction () {\n  function Store() {\n    _classCallCheck(this, Store);\n\n    _initializerDefineProperty(this, \"userInfo\", _descriptor, this);\n  }\n\n  _createClass(Store, [{\n    key: \"currentUser\",\n    value: function currentUser(info) {\n      this.userInfo = info;\n    }\n  }, {\n    key: \"addUser\",\n    value: function () {\n      var _addUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(userInfo) {\n        var answer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"/newUser\", userInfo);\n\n              case 2:\n                answer = _context.sent;\n\n                if (answer.data.exist === true) {\n                  this.currentUser(answer.data.userInfo);\n                  localStorage.setItem(\"user\", \"true\");\n                }\n\n                return _context.abrupt(\"return\", answer.data.exist);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function addUser(_x) {\n        return _addUser.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"userLogIn\",\n    value: function () {\n      var _userLogIn = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(userInfo) {\n        var answer;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"/LogInUser\", {\n                  params: {\n                    name: userInfo.Name,\n                    password: userInfo.Password\n                  }\n                });\n\n              case 2:\n                answer = _context2.sent;\n\n                if (answer.data.exist === true) {\n                  this.currentUser(answer.data.userInfo);\n                  localStorage.setItem(\"user\", \"true\");\n                }\n\n                return _context2.abrupt(\"return\", answer.data.exist);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function userLogIn(_x2) {\n        return _userLogIn.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"userLogOut\",\n    value: function () {\n      var _userLogOut = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(userId) {\n        var answer;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.put(\"/logOut\", {\n                  userId: userId\n                });\n\n              case 2:\n                answer = _context3.sent;\n\n                if (answer.data === true) {\n                  this.currentUser({});\n                  localStorage.clear();\n                }\n\n                return _context3.abrupt(\"return\", answer.data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function userLogOut(_x3) {\n        return _userLogOut.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"initialUser\",\n    value: function () {\n      var _initialUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var answer;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(\"/initUser\");\n\n              case 2:\n                answer = _context4.sent;\n                console.log(answer);\n                this.currentUser(answer);\n                localStorage.setItem(\"user\", \"true\");\n                return _context4.abrupt(\"return\", this.userInfo);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function initialUser() {\n        return _initialUser.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getUser\",\n    get: function get() {\n      return this.userInfo;\n    }\n  }]);\n\n  return Store;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"userInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"currentUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"currentUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getUser\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"getUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"userLogIn\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"userLogIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"userLogOut\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"userLogOut\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"initialUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"initialUser\"), _class.prototype)), _class);\nvar store = new Store();\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["C:\\Users\\guymu\\Desktop\\bootCamp\\final-hack\\final-project\\client\\src\\store\\Store.js"],"names":["observable","action","computed","axios","Store","info","userInfo","post","answer","data","exist","currentUser","localStorage","setItem","get","params","name","Name","password","Password","userId","put","clear","console","log","store","window"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,QAA6C,MAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,K;;;;;;;;;;;gCAIQC,I,EAAM;AAChB,WAAKC,QAAL,GAAgBD,IAAhB;AACD;;;;;;gDAMaC,Q;;;;;;;uBACOH,KAAK,CAACI,IAAN,CAAW,UAAX,EAAuBD,QAAvB,C;;;AAAfE,gBAAAA,M;;AACJ,oBAAIA,MAAM,CAACC,IAAP,CAAYC,KAAZ,KAAsB,IAA1B,EAAgC;AAC9B,uBAAKC,WAAL,CAAiBH,MAAM,CAACC,IAAP,CAAYH,QAA7B;AACAM,kBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACD;;iDACML,MAAM,CAACC,IAAP,CAAYC,K;;;;;;;;;;;;;;;;;;;iDAGLJ,Q;;;;;;;uBACKH,KAAK,CAACW,GAAN,CAAU,YAAV,EAAwB;AACzCC,kBAAAA,MAAM,EAAE;AAAEC,oBAAAA,IAAI,EAAEV,QAAQ,CAACW,IAAjB;AAAuBC,oBAAAA,QAAQ,EAAEZ,QAAQ,CAACa;AAA1C;AADiC,iBAAxB,C;;;AAAfX,gBAAAA,M;;AAGJ,oBAAIA,MAAM,CAACC,IAAP,CAAYC,KAAZ,KAAsB,IAA1B,EAAgC;AAC9B,uBAAKC,WAAL,CAAiBH,MAAM,CAACC,IAAP,CAAYH,QAA7B;AACAM,kBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACD;;kDACML,MAAM,CAACC,IAAP,CAAYC,K;;;;;;;;;;;;;;;;;;;iDAGJU,M;;;;;;;uBACIjB,KAAK,CAACkB,GAAN,CAAU,SAAV,EAAqB;AAAED,kBAAAA,MAAM,EAANA;AAAF,iBAArB,C;;;AAAfZ,gBAAAA,M;;AACJ,oBAAIA,MAAM,CAACC,IAAP,KAAgB,IAApB,EAA0B;AACxB,uBAAKE,WAAL,CAAiB,EAAjB;AACAC,kBAAAA,YAAY,CAACU,KAAb;AACD;;kDACMd,MAAM,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIKN,KAAK,CAACW,GAAN,CAAU,WAAV,C;;;AAAfN,gBAAAA,M;AACJe,gBAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,qBAAKG,WAAL,CAAiBH,MAAjB;AACAI,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,MAA7B;kDACO,KAAKP,Q;;;;;;;;;;;;;;;;wBAtCA;AACZ,aAAO,KAAKA,QAAZ;AACD;;;;6EATAN,U;;;;;WACU,E;;gEACVC,M,gJAIAC,Q,4IAIAD,M,8IASAA,M,iJAWAA,M,mJASAA,M;AAUH,IAAMwB,KAAK,GAAG,IAAIrB,KAAJ,EAAd;AACAsB,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf","sourcesContent":["import { observable, action, computed } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nclass Store {\r\n  @observable\r\n  userInfo = [];\r\n  @action\r\n  currentUser(info) {\r\n    this.userInfo = info;\r\n  }\r\n  @computed\r\n  get getUser() {\r\n    return this.userInfo;\r\n  }\r\n  @action\r\n  async addUser(userInfo) {\r\n    let answer = await axios.post(\"/newUser\", userInfo);\r\n    if (answer.data.exist === true) {\r\n      this.currentUser(answer.data.userInfo);\r\n      localStorage.setItem(\"user\", \"true\");\r\n    }\r\n    return answer.data.exist;\r\n  }\r\n  @action\r\n  async userLogIn(userInfo) {\r\n    let answer = await axios.get(\"/LogInUser\", {\r\n      params: { name: userInfo.Name, password: userInfo.Password }\r\n    });\r\n    if (answer.data.exist === true) {\r\n      this.currentUser(answer.data.userInfo);\r\n      localStorage.setItem(\"user\", \"true\");\r\n    }\r\n    return answer.data.exist;\r\n  }\r\n  @action\r\n  async userLogOut(userId) {\r\n    let answer = await axios.put(\"/logOut\", { userId });\r\n    if (answer.data === true) {\r\n      this.currentUser({});\r\n      localStorage.clear();\r\n    }\r\n    return answer.data;\r\n  }\r\n  @action\r\n  async initialUser() {\r\n    let answer = await axios.get(\"/initUser\");\r\n    console.log(answer);\r\n    this.currentUser(answer);\r\n    localStorage.setItem(\"user\", \"true\");\r\n    return this.userInfo;\r\n  }\r\n}\r\n\r\nconst store = new Store();\r\nwindow.store = store;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}