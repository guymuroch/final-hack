{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\guymu\\\\Desktop\\\\bootCamp\\\\final-hack\\\\final-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor;\n\nimport { observable } from \"mobx\";\nimport axios from \"axios\";\nvar store = (_class =\n/*#__PURE__*/\nfunction () {\n  function store() {\n    _classCallCheck(this, store);\n\n    _initializerDefineProperty(this, \"iceCreams\", _descriptor, this);\n  }\n\n  _createClass(store, [{\n    key: \"addUser\",\n    value: function addUser(userInfo) {\n      axios.post(\"/newUser\").then(function (response) {\n        if (response.status === 200) {\n          console.log(\"yasshhhhhhh fuckersss\");\n        }\n      });\n    }\n  }]);\n\n  return store;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"iceCreams\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n})), _class);\nvar Store = new store();\nexport default Store;","map":{"version":3,"sources":["C:\\Users\\guymu\\Desktop\\bootCamp\\final-hack\\final-project\\client\\src\\store\\Store.js"],"names":["observable","axios","store","userInfo","post","then","response","status","console","log","Store"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,K;;;;;;;;;;;4BAIIC,Q,EAAU;AAChBF,MAAAA,KAAK,CAACG,IAAN,CAAW,UAAX,EAAuBC,IAAvB,CAA4B,UAAAC,QAAQ,EAAI;AACtC,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,OAJD;AAKD;;;;8EATAT,U;;;;;WACW,E;;;AAWd,IAAMU,KAAK,GAAG,IAAIR,KAAJ,EAAd;AACA,eAAeQ,KAAf","sourcesContent":["import { observable } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nclass store {\r\n  @observable\r\n  iceCreams = [];\r\n\r\n  addUser(userInfo) {\r\n    axios.post(\"/newUser\").then(response => {\r\n      if (response.status === 200) {\r\n        console.log(\"yasshhhhhhh fuckersss\");\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst Store = new store();\r\nexport default Store;\r\n"]},"metadata":{},"sourceType":"module"}